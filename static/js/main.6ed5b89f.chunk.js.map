{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/test/Test.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","react_router_dom","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","onClick","class","style","cursor","float","color","bind","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","About","Test","title","body","fetch","then","response","json","NotFound","App","_this$props","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ed5b89f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst  Header = (props) =>  {\r\n    const {branding} = props;\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n          <div className=\"container\">\r\n            <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n            <div>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\">\r\n                         <i className=\"fas fa-home\"></i>   Home\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/contact/add\" className=\"nav-link\">\r\n                        <i className=\"fas fa-plus\"></i>     Add\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/about\" className=\"nav-link\">\r\n                        <i className=\"fas fa-question\"></i>     About\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n          </div>\r\n      </nav>\r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action ) => {\r\n    switch (action.type){\r\n        case 'DELETE_CONTACT': \r\n        return{\r\n            ...state,\r\n            contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n        };\r\n        case 'ADD_CONTACT': \r\n        return{\r\n            ...state,\r\n            contacts: [action.payload, ...state.contacts]\r\n        };\r\n        case 'UPDATE_CONTACT': \r\n        return{\r\n            ...state,\r\n            contacts: state.contacts.map(\r\n            contact => \r\n            contact.id === action.payload.id \r\n            ? (contact = action.payload)\r\n            : contact\r\n            )\r\n        }\r\n        default: \r\n        return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [  ],\r\n        dispatch: action => (\r\n            this.setState(state => reducer(state, action))\r\n        )\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n        this.setState({contacts: res.data});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios';\r\n\r\n\r\n class Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => { \r\n        try{\r\n       await  axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n       dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        } catch(e){\r\n            dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        }\r\n       \r\n    }\r\n\r\n\r\n\r\nrender() {\r\n    const {id, name, email, phone} = this.props.contact;\r\n    const {showContactInfo} = this.state;\r\n\r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n            const {dispatch} = value;\r\n            return (\r\n                <div className=\"card card-body mb-3\">\r\n                <h4>{name}{' '} <i onClick={() => this.setState({showContactInfo: !this.state.showContactInfo})} \r\n                class=\"fas fa-sort-down\" style={{cursor: 'pointer'}}></i>\r\n                <i className=\"fas fa-times\" style={{cursor: 'pointer', float: 'right', color: 'red'}} \r\n                onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                ></i>\r\n                <Link to={`contact/edit/${id}`}>\r\n                    <i className=\"fas fa-pencil-alt\"\r\n                    style={{cursor: 'pointer',\r\n                    float: 'right',\r\n                    color: 'black',\r\n                    marginRight: '1rem'}}></i>\r\n                </Link>\r\n                </h4>\r\n                {showContactInfo ? ( <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Email: {email}</li>\r\n                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>) : null }\r\n            </div>\r\n            )\r\n            }}\r\n        </Consumer>\r\n    );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\n\r\n class Contacts extends Component {\r\n\r\n\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {contacts} = value;\r\n                    return (\r\n                    <React.Fragment>\r\n                        <h1 className=\"display-4 mb-2\">\r\n                            <span className=\"text-danger\">Contact</span> List\r\n                        </h1>\r\n                    {contacts.map(contact => (\r\n                        <Contact \r\n                        key={contact.id}\r\n                        contact={contact}\r\n                        />\r\n                    ))}\r\n                    </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup =  ({\r\n    label, \r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n            type={type} \r\n            name={name}\r\n            className={classnames('form-control form-control-lg', {'is-invalid': error})} \r\n            placeholder={placeholder}\r\n            value={value} \r\n            onChange={onChange}\r\n            />\r\n            {error &&  <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        \r\n        const {name, email, phone} = this.state;\r\n\r\n        //Check for errors\r\n        if(name === ''){\r\n            this.setState({errors: {name: 'Name is required'}});\r\n            return;\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({errors: {email: 'Email is required'}});\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({errors: {phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n       const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\r\n        \r\n       dispatch({type: 'ADD_CONTACT', payload: res.data });\r\n\r\n\r\n\r\n        //Clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value });\r\n \r\n\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n\r\n        return (\r\n            <Consumer> \r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Add Contact</div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                        <TextInputGroup \r\n                            label='Name'\r\n                            name=\"name\"\r\n                            placeholder=\"Enter Name..\"\r\n                            value={name}\r\n                            onChange={this.onChange}\r\n                            error={errors.name}\r\n                        />\r\n\r\n\r\n                        <TextInputGroup \r\n                            label='Email'\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Enter Email..\"\r\n                            value={email}\r\n                            onChange={this.onChange}\r\n                            error={errors.email}\r\n                        />\r\n\r\n                        <TextInputGroup \r\n                            label='Phone'\r\n                            name=\"phone\"\r\n                            placeholder=\"Enter Phone Number..\"\r\n                            value={phone}\r\n                            onChange={this.onChange}\r\n                            error={errors.phone}\r\n                        />\r\n\r\n\r\n                        <input type=\"submit\" \r\n                        value=\"Add Contact\" \r\n                        className=\"btn btn-primary btn-block\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default AddContact;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        \r\n        const {name, email, phone} = this.state;\r\n\r\n        //Check for errors\r\n        if(name === ''){\r\n            this.setState({errors: {name: 'Name is required'}});\r\n            return;\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({errors: {email: 'Email is required'}});\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({errors: {phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const {id} = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n\r\n\r\n        //Clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value });\r\n \r\n\r\n\r\n    render() {\r\n        const {name, email, phone, errors} = this.state;\r\n\r\n        return (\r\n            <Consumer> \r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return(\r\n                        <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Edit Contact</div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                        <TextInputGroup \r\n                            label='Name'\r\n                            name=\"name\"\r\n                            placeholder=\"Enter Name..\"\r\n                            value={name}\r\n                            onChange={this.onChange}\r\n                            error={errors.name}\r\n                        />\r\n\r\n\r\n                        <TextInputGroup \r\n                            label='Email'\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Enter Email..\"\r\n                            value={email}\r\n                            onChange={this.onChange}\r\n                            error={errors.email}\r\n                        />\r\n\r\n                        <TextInputGroup \r\n                            label='Phone'\r\n                            name=\"phone\"\r\n                            placeholder=\"Enter Phone Number..\"\r\n                            value={phone}\r\n                            onChange={this.onChange}\r\n                            error={errors.phone}\r\n                        />\r\n\r\n\r\n                        <input type=\"submit\" \r\n                        value=\"Edit Contact\" \r\n                        className=\"btn btn-primary btn-block\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default EditContact;","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n class Test extends Component {\r\n     state = {\r\n         title: '',\r\n         body: ''\r\n     };\r\n\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users/1')\r\n        .then(response => response.json())\r\n        .then(data => \r\n            this.setState({\r\n            title: data.title,\r\n            body: data.body\r\n            })\r\n        );\r\n    }\r\n\r\n    // componentWillMount() {\r\n    //     console.log('Component Will Mount');\r\n    // }\r\n\r\n    // componentDidUpdate (){\r\n    //     console.log('Component Did Update');\r\n    // }\r\n\r\n    render() {\r\n        const {title, body} = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Test;","import React from 'react'\r\n\r\nexport default  () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4 \"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component }  from 'react';\nimport {HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/layout/Header';\n\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport Test from './components/test/Test';\n\n\nimport {Provider} from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport NotFound from './components/pages/NotFound';\n\n\nclass App extends Component {\nrender() {\n  const {name, email, phone } = this.props;\n    return (\n      <Provider>\n        <Router>\n      <div className=\"App\">\n          <Header  />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route  component={NotFound} />\n            </Switch>\n          </div>\n      </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}